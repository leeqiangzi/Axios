{"ast":null,"code":"var _jsxFileName = \"/Users/lx/Axios/axios/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this._fetchInterceptor();\n  } // 拦截器\n\n\n  _fetchInterceptor() {\n    // 请求拦截\n    axios.interceptors.request.use(config => {\n      /**\n       * 1、发送网络请求时，在页面的中间位置显示loading的组件\n       *\n       * 2、某一些请求要求用户必须携带token，如果没有携带，那么直接跳转到登录页面\n       *\n       * 3、params/data序列化操作\n       */\n      return config;\n    }, error => {});\n    axios.get('http://httpbin.org/get', {\n      params: {\n        name: 'why'\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  /**\n   * 创建新的实例：每个实例可以拥有自己特殊的配置\n   * @private\n   */\n\n\n  _fetchInstanceCreate() {\n    const instance1 = axios.create({\n      baseURL: 'http://111111xxxxxx',\n      timeout: 5000,\n      headers: {}\n    });\n    const instance2 = axios.create({\n      baseURL: 'http://22222xxxxxx',\n      timeout: 3000,\n      headers: {}\n    });\n  }\n  /**\n   * 合并多个网络请求\n   * @private\n   */\n\n\n  _fetchAll() {\n    // const request1 = axios({\n    //     url: 'http://httpbin.org/get',\n    //     params: {name: 'why', age: 18}\n    // });\n    // const request2 = axios({\n    //     url: 'http://httpbin.org/post',\n    //     data: {name: 'why', age: 18},\n    //     method: 'post'\n    // });\n    //\n    // axios.all([request1, request2]).then(res => {\n    //     console.log(res);\n    // }).catch(error => {\n    //     console.log(error);\n    // })\n    const promise1 = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve('promise1');\n      }, 1000);\n    });\n    const promise2 = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve('promise2');\n      }, 3000);\n    });\n    Promise.all([promise1, promise2]).then(res => {\n      console.log(res);\n    });\n  }\n  /**\n   * post请求\n   * @private\n   */\n\n\n  _fetchPost() {\n    axios({\n      url: 'http://httpbin.org/post',\n      data: {\n        name: 'why',\n        age: 18\n      },\n      method: 'post'\n    }).then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  /**\n   * get请求\n   * @private\n   */\n\n\n  _fetchGet() {\n    axios({\n      url: 'http://httpbin.org/get',\n      params: {\n        name: 'why',\n        age: 18\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  /**\n   * async await\n   * @returns {Promise<void>}\n   * @private\n   */\n\n\n  async _fetchData() {\n    try {\n      const result = await axios.get(\"http://httpbin.org/get\", {\n        params: {\n          name: 'why',\n          age: 18\n        }\n      });\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Component1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","axios","App","constructor","props","componentDidMount","_fetchInterceptor","interceptors","request","use","config","error","get","params","name","then","res","console","log","catch","_fetchInstanceCreate","instance1","create","baseURL","timeout","headers","instance2","_fetchAll","promise1","Promise","resolve","reject","setTimeout","promise2","all","_fetchPost","url","data","age","method","_fetchGet","_fetchData","result","render"],"sources":["/Users/lx/Axios/axios/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentDidMount() {\n\n        this._fetchInterceptor();\n    }\n\n    // 拦截器\n    _fetchInterceptor() {\n        // 请求拦截\n        axios.interceptors.request.use(config => {\n            /**\n             * 1、发送网络请求时，在页面的中间位置显示loading的组件\n             *\n             * 2、某一些请求要求用户必须携带token，如果没有携带，那么直接跳转到登录页面\n             *\n             * 3、params/data序列化操作\n             */\n            return config;\n        }, error => {\n\n        });\n\n        axios.get('http://httpbin.org/get', {\n            params: {\n                name: 'why'\n            }\n        }).then(res => {\n            console.log(res);\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    /**\n     * 创建新的实例：每个实例可以拥有自己特殊的配置\n     * @private\n     */\n    _fetchInstanceCreate() {\n        const instance1 = axios.create({\n            baseURL: 'http://111111xxxxxx',\n            timeout: 5000,\n            headers: {}\n        });\n        const instance2 = axios.create({\n            baseURL: 'http://22222xxxxxx',\n            timeout: 3000,\n            headers: {}\n        })\n    }\n\n    /**\n     * 合并多个网络请求\n     * @private\n     */\n    _fetchAll() {\n        // const request1 = axios({\n        //     url: 'http://httpbin.org/get',\n        //     params: {name: 'why', age: 18}\n        // });\n        // const request2 = axios({\n        //     url: 'http://httpbin.org/post',\n        //     data: {name: 'why', age: 18},\n        //     method: 'post'\n        // });\n        //\n        // axios.all([request1, request2]).then(res => {\n        //     console.log(res);\n        // }).catch(error => {\n        //     console.log(error);\n        // })\n\n        const promise1 = new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve('promise1');\n            }, 1000);\n        });\n        const promise2 = new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve('promise2');\n            }, 3000);\n        });\n        Promise.all([promise1, promise2]).then(res => {\n            console.log(res);\n        })\n    }\n\n    /**\n     * post请求\n     * @private\n     */\n    _fetchPost() {\n        axios({\n            url: 'http://httpbin.org/post',\n            data: {\n                name: 'why',\n                age: 18\n            },\n            method: 'post'\n        }).then(res => {\n            console.log(res);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    /**\n     * get请求\n     * @private\n     */\n    _fetchGet() {\n        axios({\n            url: 'http://httpbin.org/get',\n            params: {\n                name: 'why',\n                age: 18\n            }\n        }).then(res => {\n            console.log(res);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    /**\n     * async await\n     * @returns {Promise<void>}\n     * @private\n     */\n    async _fetchData() {\n        try {\n            const result = await axios.get(\"http://httpbin.org/get\", {\n                params: {\n                    name: 'why',\n                    age: 18\n                }\n            });\n            console.log(result);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                Component1\n            </div>\n        );\n    }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}