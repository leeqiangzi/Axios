{"ast":null,"code":"var _jsxFileName = \"/Users/lx/Axios/axios/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this._fetchInterceptor();\n  } // 拦截器\n\n\n  _fetchInterceptor() {\n    // 请求拦截\n    axios.interceptors.request.use(config => {\n      /**\n       * 1、发送网络请求时，在页面的中间位置显示loading的组件\n       *\n       * 2、某一些请求要求用户必须携带token，如果没有携带，那么直接跳转到登录页面\n       *\n       * 3、params/data序列化操作\n       */\n      return config;\n    }, error => {// 一般不会在这里拦截\n    }); // 响应拦截\n\n    axios.interceptors.response.use(res => {\n      return res.data;\n    }, error => {\n      if (error && error.response) {\n        switch (error.response.status) {\n          case 400:\n            console.log('请求错误');\n            break;\n\n          case 401:\n            console.log('未授权错误');\n            break;\n\n          default:\n            console.log('其他错误');\n            break;\n        }\n      }\n\n      return error;\n    });\n    axios.get('http://httpbin.org/get', {\n      params: {\n        name: 'why'\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  /**\n   * 创建新的实例：每个实例可以拥有自己特殊的配置\n   * @private\n   */\n\n\n  _fetchInstanceCreate() {\n    const instance1 = axios.create({\n      baseURL: 'http://111111xxxxxx',\n      timeout: 5000,\n      headers: {}\n    });\n    const instance2 = axios.create({\n      baseURL: 'http://22222xxxxxx',\n      timeout: 3000,\n      headers: {}\n    });\n  }\n  /**\n   * 合并多个网络请求\n   * @private\n   */\n\n\n  _fetchAll() {\n    // const request1 = axios({\n    //     url: 'http://httpbin.org/get',\n    //     params: {name: 'why', age: 18}\n    // });\n    // const request2 = axios({\n    //     url: 'http://httpbin.org/post',\n    //     data: {name: 'why', age: 18},\n    //     method: 'post'\n    // });\n    //\n    // axios.all([request1, request2]).then(res => {\n    //     console.log(res);\n    // }).catch(error => {\n    //     console.log(error);\n    // })\n    const promise1 = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve('promise1');\n      }, 1000);\n    });\n    const promise2 = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve('promise2');\n      }, 3000);\n    });\n    Promise.all([promise1, promise2]).then(res => {\n      console.log(res);\n    });\n  }\n  /**\n   * post请求\n   * @private\n   */\n\n\n  _fetchPost() {\n    axios({\n      url: 'http://httpbin.org/post',\n      data: {\n        name: 'why',\n        age: 18\n      },\n      method: 'post'\n    }).then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  /**\n   * get请求\n   * @private\n   */\n\n\n  _fetchGet() {\n    axios({\n      url: 'http://httpbin.org/get',\n      params: {\n        name: 'why',\n        age: 18\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  /**\n   * async await\n   * @returns {Promise<void>}\n   * @private\n   */\n\n\n  async _fetchData() {\n    try {\n      const result = await axios.get(\"http://httpbin.org/get\", {\n        params: {\n          name: 'why',\n          age: 18\n        }\n      });\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Component1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","axios","App","constructor","props","componentDidMount","_fetchInterceptor","interceptors","request","use","config","error","response","res","data","status","console","log","get","params","name","then","catch","_fetchInstanceCreate","instance1","create","baseURL","timeout","headers","instance2","_fetchAll","promise1","Promise","resolve","reject","setTimeout","promise2","all","_fetchPost","url","age","method","_fetchGet","_fetchData","result","render"],"sources":["/Users/lx/Axios/axios/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentDidMount() {\n\n        this._fetchInterceptor();\n    }\n\n    // 拦截器\n    _fetchInterceptor() {\n        // 请求拦截\n        axios.interceptors.request.use(config => {\n            /**\n             * 1、发送网络请求时，在页面的中间位置显示loading的组件\n             *\n             * 2、某一些请求要求用户必须携带token，如果没有携带，那么直接跳转到登录页面\n             *\n             * 3、params/data序列化操作\n             */\n            return config;\n        }, error => {\n            // 一般不会在这里拦截\n        });\n\n        // 响应拦截\n        axios.interceptors.response.use(res => {\n            return res.data;\n        }, error => {\n            if (error && error.response) {\n                switch (error.response.status) {\n                    case 400:\n                        console.log('请求错误');\n                        break;\n                    case 401:\n                        console.log('未授权错误');\n                        break;\n                    default:\n                        console.log('其他错误');\n                        break;\n                }\n            }\n            return error;\n        });\n\n\n        axios.get('http://httpbin.org/get', {\n            params: {\n                name: 'why'\n            }\n        }).then(res => {\n            console.log(res);\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    /**\n     * 创建新的实例：每个实例可以拥有自己特殊的配置\n     * @private\n     */\n    _fetchInstanceCreate() {\n        const instance1 = axios.create({\n            baseURL: 'http://111111xxxxxx',\n            timeout: 5000,\n            headers: {}\n        });\n        const instance2 = axios.create({\n            baseURL: 'http://22222xxxxxx',\n            timeout: 3000,\n            headers: {}\n        })\n    }\n\n    /**\n     * 合并多个网络请求\n     * @private\n     */\n    _fetchAll() {\n        // const request1 = axios({\n        //     url: 'http://httpbin.org/get',\n        //     params: {name: 'why', age: 18}\n        // });\n        // const request2 = axios({\n        //     url: 'http://httpbin.org/post',\n        //     data: {name: 'why', age: 18},\n        //     method: 'post'\n        // });\n        //\n        // axios.all([request1, request2]).then(res => {\n        //     console.log(res);\n        // }).catch(error => {\n        //     console.log(error);\n        // })\n\n        const promise1 = new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve('promise1');\n            }, 1000);\n        });\n        const promise2 = new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve('promise2');\n            }, 3000);\n        });\n        Promise.all([promise1, promise2]).then(res => {\n            console.log(res);\n        })\n    }\n\n    /**\n     * post请求\n     * @private\n     */\n    _fetchPost() {\n        axios({\n            url: 'http://httpbin.org/post',\n            data: {\n                name: 'why',\n                age: 18\n            },\n            method: 'post'\n        }).then(res => {\n            console.log(res);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    /**\n     * get请求\n     * @private\n     */\n    _fetchGet() {\n        axios({\n            url: 'http://httpbin.org/get',\n            params: {\n                name: 'why',\n                age: 18\n            }\n        }).then(res => {\n            console.log(res);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    /**\n     * async await\n     * @returns {Promise<void>}\n     * @private\n     */\n    async _fetchData() {\n        try {\n            const result = await axios.get(\"http://httpbin.org/get\", {\n                params: {\n                    name: 'why',\n                    age: 18\n                }\n            });\n            console.log(result);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                Component1\n            </div>\n        );\n    }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}